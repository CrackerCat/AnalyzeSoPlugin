plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
}

repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}


dependencies {
    compileOnly gradleApi()
    compileOnly("com.android.tools.build:gradle:${ANDROID_GRADLE_PLUGIN}")
    implementation("com.google.code.gson:gson:2.9.0")
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.10'
}
repositories {
    mavenCentral()
}

//源码一起打包到maven
java {
    withJavadocJar()
    withSourcesJar()
}
group("com.github.Android-Mainli")
version(ANALYZE_SO_PLUGIN_VERSION)
//./gradlew publish -PPUBLISH_MAVEN=true 上传新版本
publishing {
    publications {
        maven(MavenPublication) {
            artifactId project.name
            from components.java
        }
    }
    repositories {
        maven {
            url = rootProject.file(REPO_NAME)
        }

        def localPro = new Properties()
        def localProFile = rootProject.file('local.properties')
        if (localProFile.exists()) {
            localProFile.withReader('UTF-8') { reader ->
                localPro.load(reader)
            }
        }
        if (Boolean.parseBoolean(localPro.ENABLE_NEXUS)) {
            maven {
                allowInsecureProtocol = true
                credentials {
                    username localPro.NEXUS_MAVEN_USERNAME
                    password localPro.NEXUS_MAVEN_PASSWORD
                }
                if (version.endsWith('-SNAPSHOT')) {
                    url = localPro.NEXUS_MAVEN_URL_SNAPSHOT
                } else {
                    url = localPro.NEXUS_MAVEN_URL
                }
            }
        }
    }
}
javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}